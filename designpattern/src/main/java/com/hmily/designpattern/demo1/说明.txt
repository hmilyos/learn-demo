享元模式 + 原型模式
demo：基于原型模式和享元模式完成不同分层POJO之间的数据拷贝

#### 模式介绍
 享元模式：
    享元 即 共享同一份元数据。详细来说就是，同一个数据，我就认为是一个元数据，要做到整个系统里 这个数据就一份。把这一个数据缓存起来，整个系统要使用这个数据时，都是用它同一个对象实例。
    使用场景：我们在用 cglib 做对象拷贝时，要用到 BeanCopier，频繁的用 BeanCopier 做 create ，会占用太多的资源，降低服务器性能，所以在一个类的 create 后，就把他缓存起来，下次直接从缓存里拿，不需要重复的 create，这样就是用到了享元模式。

原型模式：
    就是在要拷贝的类里实现一个 clone() 方法，自己拷贝自己。
    在一个系统里，有很多地方要克隆这个对象，这个对象有自己的 clone() 方法，这个对象自己维护克隆的逻辑，不需要其他的来维护克隆逻辑，只要在这个对象的 clone() 方法里修改即可。